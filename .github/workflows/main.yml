name: 'ci'
on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  get-next-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm install @actions/core
      - name: Release
        id: get-next-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --dry-run
    outputs:
      next-release-published: ${{ steps.get-next-release.outputs.next-release-published }}
      next-release-version: ${{ steps.get-next-release.outputs.next-release-version }}
      next-release-git-tag: ${{ steps.get-next-release.outputs.next-release-git-tag }}
      next-release-notes: ${{ steps.get-next-release.outputs.next-release-notes }}
  bump-and-push:
    needs: get-next-release
    if: needs.get-next-release.outputs.next-release-published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Bump Cargo.toml version
        run: |
          sed -i 's/"version": "[0-9]\+\.[0-9]\+\.[0-9]\+"/"version": "${{ needs.get-next-release.outputs.next-release-version }}"/' src-tauri/tauri.conf.json
      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add src-tauri/tauri.conf.json
          git commit -m "Bump version [skip ci]"
          git push
  build:
    needs:
      - get-next-release
      - bump-and-push
    if: needs.get-next-release.outputs.next-release-published == 'true'
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        id: tauri-action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ needs.get-next-release.outputs.next-release-git-tag }}
          releaseName: ${{ needs.get-next-release.outputs.next-release-version }}
          releaseBody: ${{ needs.get-next-release.outputs.next-release-notes }}
          releaseDraft: false
          prerelease: false
